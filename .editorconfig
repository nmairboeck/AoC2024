# Top-most EditorConfig file.
# Remove the line below if you want to inherit .editorconfig settings from higher directories.
root = true

# These settings are applied to all files.
[*]
charset = utf-8-bom
indent_style = space
trim_trailing_whitespace = true
insert_final_newline = false
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = false:suggestion
csharp_prefer_braces = true:warning
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:warning
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = when_on_single_line:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
csharp_style_expression_bodied_local_functions = when_on_single_line:warning
csharp_indent_labels = one_less_than_current
# Don't specify a default indent_size, so IDE defaults are used for all non-specific file types.

# These settings are applied to code files.
[*.{cs,csx,vb,vbx,razor}]
indent_size = 4
tab_width = 4
end_of_line = crlf

# Mark generated code files.
[*{.g.cs}]
generated_code = true

# These settings are applied to XML project files.
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 4

# These settings are applied to XML configuration files.
[*.{xml,stylecop,props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# These settings are applied to JSON files.
[*.json]
indent_size = 2

# These settings are applied to markdown and markup files.
[*.{md,html,xaml}]
indent_size = 4
tab_width = 4

# These settings are applied to YAML configuration files.
[*.{yml,yaml}]
indent_size = 2

#### .NET Coding Conventions ####
[*.{cs,vb,razor}]
# How to sort "using" and "Import" directives.
dotnet_sort_system_directives_first = false
dotnet_separate_import_directive_groups = false

# Avoid "this." and "Me." if not necessary.
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Use language keywords instead of framework type names for type references.
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Suggested guidelines for parentheses.
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

# Use accessibility and read-only modifiers.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:warning

# Suppression preferences.
dotnet_remove_unnecessary_suppression_exclusions = none

# Suggested expression-level preferences.
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_collection_expression = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning

# Code style defaults.
dotnet_code_quality_unused_parameters = all:suggestion

# New line preferences (experimental).
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = false:warning

### CIT Naming Conventions ###
[*.{cs,razor}]

# Interface names should begin with I
dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i_style

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_style.begins_with_i_style.required_prefix = I
dotnet_naming_style.begins_with_i_style.required_suffix =
dotnet_naming_style.begins_with_i_style.word_separator =
dotnet_naming_style.begins_with_i_style.capitalization = pascal_case

# Type parameter names should begin with T
dotnet_naming_rule.type_parameter_should_be_begins_with_t.severity = warning
dotnet_naming_rule.type_parameter_should_be_begins_with_t.symbols = type_parameter
dotnet_naming_rule.type_parameter_should_be_begins_with_t.style = begins_with_t_style

dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *

dotnet_naming_style.begins_with_t_style.required_prefix = T
dotnet_naming_style.begins_with_t_style.required_suffix =
dotnet_naming_style.begins_with_t_style.word_separator =
dotnet_naming_style.begins_with_t_style.capitalization = pascal_case

# Types and non field members should be PascalCase
dotnet_naming_rule.types_and_non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_and_non_field_members_should_be_pascal_case.symbols = types_and_non_field_members
dotnet_naming_rule.types_and_non_field_members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.types_and_non_field_members.applicable_kinds = class, struct, interface, enum, property, event, delegate, method, namespace
dotnet_naming_symbols.types_and_non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_style.pascal_case_style.required_prefix =
dotnet_naming_style.pascal_case_style.required_suffix =
dotnet_naming_style.pascal_case_style.word_separator =
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Constant fields should be SCREAMING_SNAKE_CASE
dotnet_naming_rule.constant_fields_should_be_screaming_snake_case.severity = warning
dotnet_naming_rule.constant_fields_should_be_screaming_snake_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_screaming_snake_case.style = screaming_snake_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_style.screaming_snake_case_style.required_prefix =
dotnet_naming_style.screaming_snake_case_style.required_suffix =
dotnet_naming_style.screaming_snake_case_style.word_separator = _
dotnet_naming_style.screaming_snake_case_style.capitalization = all_upper

# Internal and private fields should be _camelCaseStartingWithUnderscore
dotnet_naming_rule.private_internal_fields_should_be_camel_case_starting_with_underscore.severity = warning
dotnet_naming_rule.private_internal_fields_should_be_camel_case_starting_with_underscore.symbols = private_internal_fields
dotnet_naming_rule.private_internal_fields_should_be_camel_case_starting_with_underscore.style = camel_case_starting_with_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal

dotnet_naming_style.camel_case_starting_with_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_starting_with_underscore_style.required_suffix =
dotnet_naming_style.camel_case_starting_with_underscore_style.word_separator =
dotnet_naming_style.camel_case_starting_with_underscore_style.capitalization = camel_case

# Parameter and local variables should be camelCase
dotnet_naming_rule.parameter_and_locals_should_be_camel_case.severity = warning
dotnet_naming_rule.parameter_and_locals_should_be_camel_case.symbols = parameter_and_locals
dotnet_naming_rule.parameter_and_locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.parameter_and_locals.applicable_kinds = parameter, local
dotnet_naming_symbols.parameter_and_locals.applicable_accessibilities = *

dotnet_naming_style.camel_case_style.required_prefix =
dotnet_naming_style.camel_case_style.required_suffix =
dotnet_naming_style.camel_case_style.word_separator =
dotnet_naming_style.camel_case_style.capitalization = camel_case

#### C# Coding Conventions ####
[*.{cs,razor}]

# Prefer "var" everywhere.
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Using directives and name-space declaration preferences.
csharp_using_directive_placement = outside_namespace:warning
csharp_style_namespace_declarations = file_scoped:warning

# Suggested guidelines for expression-bodied members.
csharp_style_expression_bodied_methods = when_on_single_line:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = when_on_single_line:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
csharp_style_expression_bodied_local_functions = when_on_single_line:warning

# Pattern matching preferences.
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_extended_property_pattern = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null-checking preferences.
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning

# Preferred modifier preferences.
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:warning
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# Preferred code-block preferences.
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = false:suggestion

# Suggested expression-level preferences.
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_local_over_anonymous_function = true:warning
csharp_style_prefer_method_group_conversion = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_prefer_tuple_swap = true:warning
csharp_style_prefer_utf8_string_literals = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# Code style defaults.
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_top_level_statements = true:silent

# New line preferences (experimental).
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:warning
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:warning
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning
csharp_style_allow_embedded_statements_on_same_line_experimental = false:warning

### C# Formatting Rules ###
[*.{cs,razor}]

# New line preferences.
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Code indentation preferences.
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_switch_labels = true
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current

# Space positioning preferences.
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Code wrapping preferences.
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

### IDE Analyzer Diagnostic ###
[*.{cs,vb,razor}]

# IDE0004: Remove unnecessary cast.
dotnet_diagnostic.IDE0004.severity = warning

# IDE0079: Remove unnecessary suppression.
dotnet_diagnostic.IDE0079.severity = warning


# RCS1155: Use StringComparison when comparing strings
dotnet_diagnostic.RCS1155.severity = suggestion


# CS0618: Type or member is obsolete
dotnet_diagnostic.CS0618.severity = suggestion